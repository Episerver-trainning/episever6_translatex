//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace EPiServer.Research.Connector.Language.LionBridge.FreewayWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VojoSoap", Namespace="http://tempuri.org/")]
    public partial class Vojo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCustomerAnalysisCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptOrRejectQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTaskToProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileToProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitForQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AbandonProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectStatusAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectFileByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectFileByFilenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSourceLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSourceLanguagesAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTargetLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTargetLanguagesAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubjectsAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTasksAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubTasksAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComponentsAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUOMsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUOMsAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileStatusAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectSummariesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectSummariesListAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback AboutOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Vojo() {
            this.Url = global::EPiServer.Research.Connector.Language.LionBridge.Properties.Settings.Default.EPiServer_Research_Connector_Language_LionBridge_FreewayWS_Vojo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCustomerAnalysisCodesCompletedEventHandler GetCustomerAnalysisCodesCompleted;
        
        /// <remarks/>
        public event AcceptOrRejectQuoteCompletedEventHandler AcceptOrRejectQuoteCompleted;
        
        /// <remarks/>
        public event GetProjectInformationCompletedEventHandler GetProjectInformationCompleted;
        
        /// <remarks/>
        public event CreateProjectCompletedEventHandler CreateProjectCompleted;
        
        /// <remarks/>
        public event AddTaskToProjectCompletedEventHandler AddTaskToProjectCompleted;
        
        /// <remarks/>
        public event AddFileToProjectCompletedEventHandler AddFileToProjectCompleted;
        
        /// <remarks/>
        public event SubmitProjectCompletedEventHandler SubmitProjectCompleted;
        
        /// <remarks/>
        public event SubmitForQuotationCompletedEventHandler SubmitForQuotationCompleted;
        
        /// <remarks/>
        public event AbandonProjectCompletedEventHandler AbandonProjectCompleted;
        
        /// <remarks/>
        public event GetProjectStatusCompletedEventHandler GetProjectStatusCompleted;
        
        /// <remarks/>
        public event GetProjectStatusAsXMLCompletedEventHandler GetProjectStatusAsXMLCompleted;
        
        /// <remarks/>
        public event RetrieveProjectFileByIDCompletedEventHandler RetrieveProjectFileByIDCompleted;
        
        /// <remarks/>
        public event RetrieveProjectFileByFilenameCompletedEventHandler RetrieveProjectFileByFilenameCompleted;
        
        /// <remarks/>
        public event GetSourceLanguagesCompletedEventHandler GetSourceLanguagesCompleted;
        
        /// <remarks/>
        public event GetSourceLanguagesAsXMLCompletedEventHandler GetSourceLanguagesAsXMLCompleted;
        
        /// <remarks/>
        public event GetTargetLanguagesCompletedEventHandler GetTargetLanguagesCompleted;
        
        /// <remarks/>
        public event GetTargetLanguagesAsXMLCompletedEventHandler GetTargetLanguagesAsXMLCompleted;
        
        /// <remarks/>
        public event GetSubjectsCompletedEventHandler GetSubjectsCompleted;
        
        /// <remarks/>
        public event GetSubjectsAsXMLCompletedEventHandler GetSubjectsAsXMLCompleted;
        
        /// <remarks/>
        public event GetTasksCompletedEventHandler GetTasksCompleted;
        
        /// <remarks/>
        public event GetTasksAsXMLCompletedEventHandler GetTasksAsXMLCompleted;
        
        /// <remarks/>
        public event GetSubTasksCompletedEventHandler GetSubTasksCompleted;
        
        /// <remarks/>
        public event GetSubTasksAsXMLCompletedEventHandler GetSubTasksAsXMLCompleted;
        
        /// <remarks/>
        public event GetComponentsCompletedEventHandler GetComponentsCompleted;
        
        /// <remarks/>
        public event GetComponentsAsXMLCompletedEventHandler GetComponentsAsXMLCompleted;
        
        /// <remarks/>
        public event GetUOMsCompletedEventHandler GetUOMsCompleted;
        
        /// <remarks/>
        public event GetUOMsAsXMLCompletedEventHandler GetUOMsAsXMLCompleted;
        
        /// <remarks/>
        public event GetFileStatusCompletedEventHandler GetFileStatusCompleted;
        
        /// <remarks/>
        public event GetFileStatusAsXMLCompletedEventHandler GetFileStatusAsXMLCompleted;
        
        /// <remarks/>
        public event GetProjectSummariesListCompletedEventHandler GetProjectSummariesListCompleted;
        
        /// <remarks/>
        public event GetProjectSummariesListAsXMLCompletedEventHandler GetProjectSummariesListAsXMLCompleted;
        
        /// <remarks/>
        public event AboutCompletedEventHandler AboutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerAnalysisCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AnalysisCodeGroup[] GetCustomerAnalysisCodes(string Ticket, string AnalysisCodeLabel) {
            object[] results = this.Invoke("GetCustomerAnalysisCodes", new object[] {
                        Ticket,
                        AnalysisCodeLabel});
            return ((AnalysisCodeGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAnalysisCodesAsync(string Ticket, string AnalysisCodeLabel) {
            this.GetCustomerAnalysisCodesAsync(Ticket, AnalysisCodeLabel, null);
        }
        
        /// <remarks/>
        public void GetCustomerAnalysisCodesAsync(string Ticket, string AnalysisCodeLabel, object userState) {
            if ((this.GetCustomerAnalysisCodesOperationCompleted == null)) {
                this.GetCustomerAnalysisCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAnalysisCodesOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAnalysisCodes", new object[] {
                        Ticket,
                        AnalysisCodeLabel}, this.GetCustomerAnalysisCodesOperationCompleted, userState);
        }
        
        private void OnGetCustomerAnalysisCodesOperationCompleted(object arg) {
            if ((this.GetCustomerAnalysisCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAnalysisCodesCompleted(this, new GetCustomerAnalysisCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AcceptOrRejectQuote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptOrRejectQuote(string Ticket, string QuoteID, QuoteAction Action, string POReference, string Comments) {
            this.Invoke("AcceptOrRejectQuote", new object[] {
                        Ticket,
                        QuoteID,
                        Action,
                        POReference,
                        Comments});
        }
        
        /// <remarks/>
        public void AcceptOrRejectQuoteAsync(string Ticket, string QuoteID, QuoteAction Action, string POReference, string Comments) {
            this.AcceptOrRejectQuoteAsync(Ticket, QuoteID, Action, POReference, Comments, null);
        }
        
        /// <remarks/>
        public void AcceptOrRejectQuoteAsync(string Ticket, string QuoteID, QuoteAction Action, string POReference, string Comments, object userState) {
            if ((this.AcceptOrRejectQuoteOperationCompleted == null)) {
                this.AcceptOrRejectQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptOrRejectQuoteOperationCompleted);
            }
            this.InvokeAsync("AcceptOrRejectQuote", new object[] {
                        Ticket,
                        QuoteID,
                        Action,
                        POReference,
                        Comments}, this.AcceptOrRejectQuoteOperationCompleted, userState);
        }
        
        private void OnAcceptOrRejectQuoteOperationCompleted(object arg) {
            if ((this.AcceptOrRejectQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptOrRejectQuoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ProjectDetails")]
        public ProjectDetails GetProjectInformation(string Ticket, string ProjectID, bool RetrieveLineDetails, string Locale) {
            object[] results = this.Invoke("GetProjectInformation", new object[] {
                        Ticket,
                        ProjectID,
                        RetrieveLineDetails,
                        Locale});
            return ((ProjectDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectInformationAsync(string Ticket, string ProjectID, bool RetrieveLineDetails, string Locale) {
            this.GetProjectInformationAsync(Ticket, ProjectID, RetrieveLineDetails, Locale, null);
        }
        
        /// <remarks/>
        public void GetProjectInformationAsync(string Ticket, string ProjectID, bool RetrieveLineDetails, string Locale, object userState) {
            if ((this.GetProjectInformationOperationCompleted == null)) {
                this.GetProjectInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectInformationOperationCompleted);
            }
            this.InvokeAsync("GetProjectInformation", new object[] {
                        Ticket,
                        ProjectID,
                        RetrieveLineDetails,
                        Locale}, this.GetProjectInformationOperationCompleted, userState);
        }
        
        private void OnGetProjectInformationOperationCompleted(object arg) {
            if ((this.GetProjectInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectInformationCompleted(this, new GetProjectInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateProject(string Ticket, string Description, string SpecialInstructions, string CustomReference, string POReference, System.DateTime ExpectedStartingDate, System.DateTime ExpectedDeliveryDate, Meta[] MetaData) {
            object[] results = this.Invoke("CreateProject", new object[] {
                        Ticket,
                        Description,
                        SpecialInstructions,
                        CustomReference,
                        POReference,
                        ExpectedStartingDate,
                        ExpectedDeliveryDate,
                        MetaData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProjectAsync(string Ticket, string Description, string SpecialInstructions, string CustomReference, string POReference, System.DateTime ExpectedStartingDate, System.DateTime ExpectedDeliveryDate, Meta[] MetaData) {
            this.CreateProjectAsync(Ticket, Description, SpecialInstructions, CustomReference, POReference, ExpectedStartingDate, ExpectedDeliveryDate, MetaData, null);
        }
        
        /// <remarks/>
        public void CreateProjectAsync(string Ticket, string Description, string SpecialInstructions, string CustomReference, string POReference, System.DateTime ExpectedStartingDate, System.DateTime ExpectedDeliveryDate, Meta[] MetaData, object userState) {
            if ((this.CreateProjectOperationCompleted == null)) {
                this.CreateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProjectOperationCompleted);
            }
            this.InvokeAsync("CreateProject", new object[] {
                        Ticket,
                        Description,
                        SpecialInstructions,
                        CustomReference,
                        POReference,
                        ExpectedStartingDate,
                        ExpectedDeliveryDate,
                        MetaData}, this.CreateProjectOperationCompleted, userState);
        }
        
        private void OnCreateProjectOperationCompleted(object arg) {
            if ((this.CreateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProjectCompleted(this, new CreateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTaskToProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTaskToProject(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string ComponentID, string SubjectID, string TaskID, string SubTaskID, double Volume, string UOMID) {
            object[] results = this.Invoke("AddTaskToProject", new object[] {
                        Ticket,
                        ProjectID,
                        SourceLanguageID,
                        TargetLanguageID,
                        ComponentID,
                        SubjectID,
                        TaskID,
                        SubTaskID,
                        Volume,
                        UOMID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTaskToProjectAsync(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string ComponentID, string SubjectID, string TaskID, string SubTaskID, double Volume, string UOMID) {
            this.AddTaskToProjectAsync(Ticket, ProjectID, SourceLanguageID, TargetLanguageID, ComponentID, SubjectID, TaskID, SubTaskID, Volume, UOMID, null);
        }
        
        /// <remarks/>
        public void AddTaskToProjectAsync(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string ComponentID, string SubjectID, string TaskID, string SubTaskID, double Volume, string UOMID, object userState) {
            if ((this.AddTaskToProjectOperationCompleted == null)) {
                this.AddTaskToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaskToProjectOperationCompleted);
            }
            this.InvokeAsync("AddTaskToProject", new object[] {
                        Ticket,
                        ProjectID,
                        SourceLanguageID,
                        TargetLanguageID,
                        ComponentID,
                        SubjectID,
                        TaskID,
                        SubTaskID,
                        Volume,
                        UOMID}, this.AddTaskToProjectOperationCompleted, userState);
        }
        
        private void OnAddTaskToProjectOperationCompleted(object arg) {
            if ((this.AddTaskToProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaskToProjectCompleted(this, new AddTaskToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFileToProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileInfoList AddFileToProject(string Ticket, string ProjectID, string Filename, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileData, string SourceLanguageID, string[] TargetLanguageIDs, Meta[] Metadata, bool IsReferenceMaterial) {
            object[] results = this.Invoke("AddFileToProject", new object[] {
                        Ticket,
                        ProjectID,
                        Filename,
                        FileData,
                        SourceLanguageID,
                        TargetLanguageIDs,
                        Metadata,
                        IsReferenceMaterial});
            return ((FileInfoList)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileToProjectAsync(string Ticket, string ProjectID, string Filename, byte[] FileData, string SourceLanguageID, string[] TargetLanguageIDs, Meta[] Metadata, bool IsReferenceMaterial) {
            this.AddFileToProjectAsync(Ticket, ProjectID, Filename, FileData, SourceLanguageID, TargetLanguageIDs, Metadata, IsReferenceMaterial, null);
        }
        
        /// <remarks/>
        public void AddFileToProjectAsync(string Ticket, string ProjectID, string Filename, byte[] FileData, string SourceLanguageID, string[] TargetLanguageIDs, Meta[] Metadata, bool IsReferenceMaterial, object userState) {
            if ((this.AddFileToProjectOperationCompleted == null)) {
                this.AddFileToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileToProjectOperationCompleted);
            }
            this.InvokeAsync("AddFileToProject", new object[] {
                        Ticket,
                        ProjectID,
                        Filename,
                        FileData,
                        SourceLanguageID,
                        TargetLanguageIDs,
                        Metadata,
                        IsReferenceMaterial}, this.AddFileToProjectOperationCompleted, userState);
        }
        
        private void OnAddFileToProjectOperationCompleted(object arg) {
            if ((this.AddFileToProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileToProjectCompleted(this, new AddFileToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitProject(string Ticket, string ProjectID) {
            object[] results = this.Invoke("SubmitProject", new object[] {
                        Ticket,
                        ProjectID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitProjectAsync(string Ticket, string ProjectID) {
            this.SubmitProjectAsync(Ticket, ProjectID, null);
        }
        
        /// <remarks/>
        public void SubmitProjectAsync(string Ticket, string ProjectID, object userState) {
            if ((this.SubmitProjectOperationCompleted == null)) {
                this.SubmitProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitProjectOperationCompleted);
            }
            this.InvokeAsync("SubmitProject", new object[] {
                        Ticket,
                        ProjectID}, this.SubmitProjectOperationCompleted, userState);
        }
        
        private void OnSubmitProjectOperationCompleted(object arg) {
            if ((this.SubmitProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitProjectCompleted(this, new SubmitProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitForQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitForQuotation(string Ticket, string ProjectID) {
            object[] results = this.Invoke("SubmitForQuotation", new object[] {
                        Ticket,
                        ProjectID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitForQuotationAsync(string Ticket, string ProjectID) {
            this.SubmitForQuotationAsync(Ticket, ProjectID, null);
        }
        
        /// <remarks/>
        public void SubmitForQuotationAsync(string Ticket, string ProjectID, object userState) {
            if ((this.SubmitForQuotationOperationCompleted == null)) {
                this.SubmitForQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitForQuotationOperationCompleted);
            }
            this.InvokeAsync("SubmitForQuotation", new object[] {
                        Ticket,
                        ProjectID}, this.SubmitForQuotationOperationCompleted, userState);
        }
        
        private void OnSubmitForQuotationOperationCompleted(object arg) {
            if ((this.SubmitForQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitForQuotationCompleted(this, new SubmitForQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AbandonProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AbandonProject(string Ticket, string ProjectID) {
            object[] results = this.Invoke("AbandonProject", new object[] {
                        Ticket,
                        ProjectID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AbandonProjectAsync(string Ticket, string ProjectID) {
            this.AbandonProjectAsync(Ticket, ProjectID, null);
        }
        
        /// <remarks/>
        public void AbandonProjectAsync(string Ticket, string ProjectID, object userState) {
            if ((this.AbandonProjectOperationCompleted == null)) {
                this.AbandonProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbandonProjectOperationCompleted);
            }
            this.InvokeAsync("AbandonProject", new object[] {
                        Ticket,
                        ProjectID}, this.AbandonProjectOperationCompleted, userState);
        }
        
        private void OnAbandonProjectOperationCompleted(object arg) {
            if ((this.AbandonProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AbandonProjectCompleted(this, new AbandonProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectStatus GetProjectStatus(string Ticket, string ProjectID) {
            object[] results = this.Invoke("GetProjectStatus", new object[] {
                        Ticket,
                        ProjectID});
            return ((ProjectStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectStatusAsync(string Ticket, string ProjectID) {
            this.GetProjectStatusAsync(Ticket, ProjectID, null);
        }
        
        /// <remarks/>
        public void GetProjectStatusAsync(string Ticket, string ProjectID, object userState) {
            if ((this.GetProjectStatusOperationCompleted == null)) {
                this.GetProjectStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectStatusOperationCompleted);
            }
            this.InvokeAsync("GetProjectStatus", new object[] {
                        Ticket,
                        ProjectID}, this.GetProjectStatusOperationCompleted, userState);
        }
        
        private void OnGetProjectStatusOperationCompleted(object arg) {
            if ((this.GetProjectStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectStatusCompleted(this, new GetProjectStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectStatusAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectStatusAsXML(string Ticket, string ProjectID) {
            object[] results = this.Invoke("GetProjectStatusAsXML", new object[] {
                        Ticket,
                        ProjectID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectStatusAsXMLAsync(string Ticket, string ProjectID) {
            this.GetProjectStatusAsXMLAsync(Ticket, ProjectID, null);
        }
        
        /// <remarks/>
        public void GetProjectStatusAsXMLAsync(string Ticket, string ProjectID, object userState) {
            if ((this.GetProjectStatusAsXMLOperationCompleted == null)) {
                this.GetProjectStatusAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectStatusAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetProjectStatusAsXML", new object[] {
                        Ticket,
                        ProjectID}, this.GetProjectStatusAsXMLOperationCompleted, userState);
        }
        
        private void OnGetProjectStatusAsXMLOperationCompleted(object arg) {
            if ((this.GetProjectStatusAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectStatusAsXMLCompleted(this, new GetProjectStatusAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectFileByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RetrieveProjectFileByID(string Ticket, string ProjectID, string FileID) {
            object[] results = this.Invoke("RetrieveProjectFileByID", new object[] {
                        Ticket,
                        ProjectID,
                        FileID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectFileByIDAsync(string Ticket, string ProjectID, string FileID) {
            this.RetrieveProjectFileByIDAsync(Ticket, ProjectID, FileID, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectFileByIDAsync(string Ticket, string ProjectID, string FileID, object userState) {
            if ((this.RetrieveProjectFileByIDOperationCompleted == null)) {
                this.RetrieveProjectFileByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectFileByIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectFileByID", new object[] {
                        Ticket,
                        ProjectID,
                        FileID}, this.RetrieveProjectFileByIDOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectFileByIDOperationCompleted(object arg) {
            if ((this.RetrieveProjectFileByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectFileByIDCompleted(this, new RetrieveProjectFileByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectFileByFilename", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RetrieveProjectFileByFilename(string Ticket, string ProjectID, string Filename, string SourceLanguageID, string TargetLanguageID) {
            object[] results = this.Invoke("RetrieveProjectFileByFilename", new object[] {
                        Ticket,
                        ProjectID,
                        Filename,
                        SourceLanguageID,
                        TargetLanguageID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectFileByFilenameAsync(string Ticket, string ProjectID, string Filename, string SourceLanguageID, string TargetLanguageID) {
            this.RetrieveProjectFileByFilenameAsync(Ticket, ProjectID, Filename, SourceLanguageID, TargetLanguageID, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectFileByFilenameAsync(string Ticket, string ProjectID, string Filename, string SourceLanguageID, string TargetLanguageID, object userState) {
            if ((this.RetrieveProjectFileByFilenameOperationCompleted == null)) {
                this.RetrieveProjectFileByFilenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectFileByFilenameOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectFileByFilename", new object[] {
                        Ticket,
                        ProjectID,
                        Filename,
                        SourceLanguageID,
                        TargetLanguageID}, this.RetrieveProjectFileByFilenameOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectFileByFilenameOperationCompleted(object arg) {
            if ((this.RetrieveProjectFileByFilenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectFileByFilenameCompleted(this, new RetrieveProjectFileByFilenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSourceLanguages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LanguageList GetSourceLanguages(string Ticket) {
            object[] results = this.Invoke("GetSourceLanguages", new object[] {
                        Ticket});
            return ((LanguageList)(results[0]));
        }
        
        /// <remarks/>
        public void GetSourceLanguagesAsync(string Ticket) {
            this.GetSourceLanguagesAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetSourceLanguagesAsync(string Ticket, object userState) {
            if ((this.GetSourceLanguagesOperationCompleted == null)) {
                this.GetSourceLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSourceLanguagesOperationCompleted);
            }
            this.InvokeAsync("GetSourceLanguages", new object[] {
                        Ticket}, this.GetSourceLanguagesOperationCompleted, userState);
        }
        
        private void OnGetSourceLanguagesOperationCompleted(object arg) {
            if ((this.GetSourceLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSourceLanguagesCompleted(this, new GetSourceLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSourceLanguagesAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSourceLanguagesAsXML(string Ticket) {
            object[] results = this.Invoke("GetSourceLanguagesAsXML", new object[] {
                        Ticket});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSourceLanguagesAsXMLAsync(string Ticket) {
            this.GetSourceLanguagesAsXMLAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetSourceLanguagesAsXMLAsync(string Ticket, object userState) {
            if ((this.GetSourceLanguagesAsXMLOperationCompleted == null)) {
                this.GetSourceLanguagesAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSourceLanguagesAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetSourceLanguagesAsXML", new object[] {
                        Ticket}, this.GetSourceLanguagesAsXMLOperationCompleted, userState);
        }
        
        private void OnGetSourceLanguagesAsXMLOperationCompleted(object arg) {
            if ((this.GetSourceLanguagesAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSourceLanguagesAsXMLCompleted(this, new GetSourceLanguagesAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTargetLanguages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LanguageList GetTargetLanguages(string Ticket, string SourceLanguageID) {
            object[] results = this.Invoke("GetTargetLanguages", new object[] {
                        Ticket,
                        SourceLanguageID});
            return ((LanguageList)(results[0]));
        }
        
        /// <remarks/>
        public void GetTargetLanguagesAsync(string Ticket, string SourceLanguageID) {
            this.GetTargetLanguagesAsync(Ticket, SourceLanguageID, null);
        }
        
        /// <remarks/>
        public void GetTargetLanguagesAsync(string Ticket, string SourceLanguageID, object userState) {
            if ((this.GetTargetLanguagesOperationCompleted == null)) {
                this.GetTargetLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTargetLanguagesOperationCompleted);
            }
            this.InvokeAsync("GetTargetLanguages", new object[] {
                        Ticket,
                        SourceLanguageID}, this.GetTargetLanguagesOperationCompleted, userState);
        }
        
        private void OnGetTargetLanguagesOperationCompleted(object arg) {
            if ((this.GetTargetLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTargetLanguagesCompleted(this, new GetTargetLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTargetLanguagesAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTargetLanguagesAsXML(string Ticket, string SourceLanguageID) {
            object[] results = this.Invoke("GetTargetLanguagesAsXML", new object[] {
                        Ticket,
                        SourceLanguageID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTargetLanguagesAsXMLAsync(string Ticket, string SourceLanguageID) {
            this.GetTargetLanguagesAsXMLAsync(Ticket, SourceLanguageID, null);
        }
        
        /// <remarks/>
        public void GetTargetLanguagesAsXMLAsync(string Ticket, string SourceLanguageID, object userState) {
            if ((this.GetTargetLanguagesAsXMLOperationCompleted == null)) {
                this.GetTargetLanguagesAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTargetLanguagesAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetTargetLanguagesAsXML", new object[] {
                        Ticket,
                        SourceLanguageID}, this.GetTargetLanguagesAsXMLOperationCompleted, userState);
        }
        
        private void OnGetTargetLanguagesAsXMLOperationCompleted(object arg) {
            if ((this.GetTargetLanguagesAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTargetLanguagesAsXMLCompleted(this, new GetTargetLanguagesAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubjects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubjectsList GetSubjects(string Ticket) {
            object[] results = this.Invoke("GetSubjects", new object[] {
                        Ticket});
            return ((SubjectsList)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectsAsync(string Ticket) {
            this.GetSubjectsAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetSubjectsAsync(string Ticket, object userState) {
            if ((this.GetSubjectsOperationCompleted == null)) {
                this.GetSubjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectsOperationCompleted);
            }
            this.InvokeAsync("GetSubjects", new object[] {
                        Ticket}, this.GetSubjectsOperationCompleted, userState);
        }
        
        private void OnGetSubjectsOperationCompleted(object arg) {
            if ((this.GetSubjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectsCompleted(this, new GetSubjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubjectsAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubjectsAsXML(string Ticket) {
            object[] results = this.Invoke("GetSubjectsAsXML", new object[] {
                        Ticket});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectsAsXMLAsync(string Ticket) {
            this.GetSubjectsAsXMLAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetSubjectsAsXMLAsync(string Ticket, object userState) {
            if ((this.GetSubjectsAsXMLOperationCompleted == null)) {
                this.GetSubjectsAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectsAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetSubjectsAsXML", new object[] {
                        Ticket}, this.GetSubjectsAsXMLOperationCompleted, userState);
        }
        
        private void OnGetSubjectsAsXMLOperationCompleted(object arg) {
            if ((this.GetSubjectsAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectsAsXMLCompleted(this, new GetSubjectsAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TasksList GetTasks(string Ticket) {
            object[] results = this.Invoke("GetTasks", new object[] {
                        Ticket});
            return ((TasksList)(results[0]));
        }
        
        /// <remarks/>
        public void GetTasksAsync(string Ticket) {
            this.GetTasksAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetTasksAsync(string Ticket, object userState) {
            if ((this.GetTasksOperationCompleted == null)) {
                this.GetTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTasksOperationCompleted);
            }
            this.InvokeAsync("GetTasks", new object[] {
                        Ticket}, this.GetTasksOperationCompleted, userState);
        }
        
        private void OnGetTasksOperationCompleted(object arg) {
            if ((this.GetTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTasksCompleted(this, new GetTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasksAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTasksAsXML(string Ticket) {
            object[] results = this.Invoke("GetTasksAsXML", new object[] {
                        Ticket});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTasksAsXMLAsync(string Ticket) {
            this.GetTasksAsXMLAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetTasksAsXMLAsync(string Ticket, object userState) {
            if ((this.GetTasksAsXMLOperationCompleted == null)) {
                this.GetTasksAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTasksAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetTasksAsXML", new object[] {
                        Ticket}, this.GetTasksAsXMLOperationCompleted, userState);
        }
        
        private void OnGetTasksAsXMLOperationCompleted(object arg) {
            if ((this.GetTasksAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTasksAsXMLCompleted(this, new GetTasksAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubTasksList GetSubTasks(string Ticket, string TaskID) {
            object[] results = this.Invoke("GetSubTasks", new object[] {
                        Ticket,
                        TaskID});
            return ((SubTasksList)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubTasksAsync(string Ticket, string TaskID) {
            this.GetSubTasksAsync(Ticket, TaskID, null);
        }
        
        /// <remarks/>
        public void GetSubTasksAsync(string Ticket, string TaskID, object userState) {
            if ((this.GetSubTasksOperationCompleted == null)) {
                this.GetSubTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubTasksOperationCompleted);
            }
            this.InvokeAsync("GetSubTasks", new object[] {
                        Ticket,
                        TaskID}, this.GetSubTasksOperationCompleted, userState);
        }
        
        private void OnGetSubTasksOperationCompleted(object arg) {
            if ((this.GetSubTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubTasksCompleted(this, new GetSubTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubTasksAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubTasksAsXML(string Ticket, string TaskID) {
            object[] results = this.Invoke("GetSubTasksAsXML", new object[] {
                        Ticket,
                        TaskID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubTasksAsXMLAsync(string Ticket, string TaskID) {
            this.GetSubTasksAsXMLAsync(Ticket, TaskID, null);
        }
        
        /// <remarks/>
        public void GetSubTasksAsXMLAsync(string Ticket, string TaskID, object userState) {
            if ((this.GetSubTasksAsXMLOperationCompleted == null)) {
                this.GetSubTasksAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubTasksAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetSubTasksAsXML", new object[] {
                        Ticket,
                        TaskID}, this.GetSubTasksAsXMLOperationCompleted, userState);
        }
        
        private void OnGetSubTasksAsXMLOperationCompleted(object arg) {
            if ((this.GetSubTasksAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubTasksAsXMLCompleted(this, new GetSubTasksAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetComponents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComponentsList GetComponents(string Ticket) {
            object[] results = this.Invoke("GetComponents", new object[] {
                        Ticket});
            return ((ComponentsList)(results[0]));
        }
        
        /// <remarks/>
        public void GetComponentsAsync(string Ticket) {
            this.GetComponentsAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetComponentsAsync(string Ticket, object userState) {
            if ((this.GetComponentsOperationCompleted == null)) {
                this.GetComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComponentsOperationCompleted);
            }
            this.InvokeAsync("GetComponents", new object[] {
                        Ticket}, this.GetComponentsOperationCompleted, userState);
        }
        
        private void OnGetComponentsOperationCompleted(object arg) {
            if ((this.GetComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComponentsCompleted(this, new GetComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetComponentsAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComponentsAsXML(string Ticket) {
            object[] results = this.Invoke("GetComponentsAsXML", new object[] {
                        Ticket});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetComponentsAsXMLAsync(string Ticket) {
            this.GetComponentsAsXMLAsync(Ticket, null);
        }
        
        /// <remarks/>
        public void GetComponentsAsXMLAsync(string Ticket, object userState) {
            if ((this.GetComponentsAsXMLOperationCompleted == null)) {
                this.GetComponentsAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComponentsAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetComponentsAsXML", new object[] {
                        Ticket}, this.GetComponentsAsXMLOperationCompleted, userState);
        }
        
        private void OnGetComponentsAsXMLOperationCompleted(object arg) {
            if ((this.GetComponentsAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComponentsAsXMLCompleted(this, new GetComponentsAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUOMs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UOMsList GetUOMs(string Ticket, string TaskID) {
            object[] results = this.Invoke("GetUOMs", new object[] {
                        Ticket,
                        TaskID});
            return ((UOMsList)(results[0]));
        }
        
        /// <remarks/>
        public void GetUOMsAsync(string Ticket, string TaskID) {
            this.GetUOMsAsync(Ticket, TaskID, null);
        }
        
        /// <remarks/>
        public void GetUOMsAsync(string Ticket, string TaskID, object userState) {
            if ((this.GetUOMsOperationCompleted == null)) {
                this.GetUOMsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUOMsOperationCompleted);
            }
            this.InvokeAsync("GetUOMs", new object[] {
                        Ticket,
                        TaskID}, this.GetUOMsOperationCompleted, userState);
        }
        
        private void OnGetUOMsOperationCompleted(object arg) {
            if ((this.GetUOMsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUOMsCompleted(this, new GetUOMsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUOMsAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUOMsAsXML(string Ticket, string TaskID) {
            object[] results = this.Invoke("GetUOMsAsXML", new object[] {
                        Ticket,
                        TaskID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUOMsAsXMLAsync(string Ticket, string TaskID) {
            this.GetUOMsAsXMLAsync(Ticket, TaskID, null);
        }
        
        /// <remarks/>
        public void GetUOMsAsXMLAsync(string Ticket, string TaskID, object userState) {
            if ((this.GetUOMsAsXMLOperationCompleted == null)) {
                this.GetUOMsAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUOMsAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetUOMsAsXML", new object[] {
                        Ticket,
                        TaskID}, this.GetUOMsAsXMLOperationCompleted, userState);
        }
        
        private void OnGetUOMsAsXMLOperationCompleted(object arg) {
            if ((this.GetUOMsAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUOMsAsXMLCompleted(this, new GetUOMsAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileStatusList GetFileStatus(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string FileID, string Filename) {
            object[] results = this.Invoke("GetFileStatus", new object[] {
                        Ticket,
                        ProjectID,
                        SourceLanguageID,
                        TargetLanguageID,
                        FileID,
                        Filename});
            return ((FileStatusList)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileStatusAsync(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string FileID, string Filename) {
            this.GetFileStatusAsync(Ticket, ProjectID, SourceLanguageID, TargetLanguageID, FileID, Filename, null);
        }
        
        /// <remarks/>
        public void GetFileStatusAsync(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string FileID, string Filename, object userState) {
            if ((this.GetFileStatusOperationCompleted == null)) {
                this.GetFileStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStatusOperationCompleted);
            }
            this.InvokeAsync("GetFileStatus", new object[] {
                        Ticket,
                        ProjectID,
                        SourceLanguageID,
                        TargetLanguageID,
                        FileID,
                        Filename}, this.GetFileStatusOperationCompleted, userState);
        }
        
        private void OnGetFileStatusOperationCompleted(object arg) {
            if ((this.GetFileStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStatusCompleted(this, new GetFileStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileStatusAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileStatusAsXML(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string FileID, string Filename) {
            object[] results = this.Invoke("GetFileStatusAsXML", new object[] {
                        Ticket,
                        ProjectID,
                        SourceLanguageID,
                        TargetLanguageID,
                        FileID,
                        Filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileStatusAsXMLAsync(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string FileID, string Filename) {
            this.GetFileStatusAsXMLAsync(Ticket, ProjectID, SourceLanguageID, TargetLanguageID, FileID, Filename, null);
        }
        
        /// <remarks/>
        public void GetFileStatusAsXMLAsync(string Ticket, string ProjectID, string SourceLanguageID, string TargetLanguageID, string FileID, string Filename, object userState) {
            if ((this.GetFileStatusAsXMLOperationCompleted == null)) {
                this.GetFileStatusAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStatusAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetFileStatusAsXML", new object[] {
                        Ticket,
                        ProjectID,
                        SourceLanguageID,
                        TargetLanguageID,
                        FileID,
                        Filename}, this.GetFileStatusAsXMLOperationCompleted, userState);
        }
        
        private void OnGetFileStatusAsXMLOperationCompleted(object arg) {
            if ((this.GetFileStatusAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStatusAsXMLCompleted(this, new GetFileStatusAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectSummariesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectSummaryList GetProjectSummariesList(string Ticket, int NumberOfProjects, SortOrder SortOrder, ProjectStatusCode ProjectStatusCode) {
            object[] results = this.Invoke("GetProjectSummariesList", new object[] {
                        Ticket,
                        NumberOfProjects,
                        SortOrder,
                        ProjectStatusCode});
            return ((ProjectSummaryList)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectSummariesListAsync(string Ticket, int NumberOfProjects, SortOrder SortOrder, ProjectStatusCode ProjectStatusCode) {
            this.GetProjectSummariesListAsync(Ticket, NumberOfProjects, SortOrder, ProjectStatusCode, null);
        }
        
        /// <remarks/>
        public void GetProjectSummariesListAsync(string Ticket, int NumberOfProjects, SortOrder SortOrder, ProjectStatusCode ProjectStatusCode, object userState) {
            if ((this.GetProjectSummariesListOperationCompleted == null)) {
                this.GetProjectSummariesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectSummariesListOperationCompleted);
            }
            this.InvokeAsync("GetProjectSummariesList", new object[] {
                        Ticket,
                        NumberOfProjects,
                        SortOrder,
                        ProjectStatusCode}, this.GetProjectSummariesListOperationCompleted, userState);
        }
        
        private void OnGetProjectSummariesListOperationCompleted(object arg) {
            if ((this.GetProjectSummariesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectSummariesListCompleted(this, new GetProjectSummariesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectSummariesListAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectSummariesListAsXML(string Ticket, int NumberOfProjects, SortOrder SortOrder, ProjectStatusCode ProjectStatusCode) {
            object[] results = this.Invoke("GetProjectSummariesListAsXML", new object[] {
                        Ticket,
                        NumberOfProjects,
                        SortOrder,
                        ProjectStatusCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectSummariesListAsXMLAsync(string Ticket, int NumberOfProjects, SortOrder SortOrder, ProjectStatusCode ProjectStatusCode) {
            this.GetProjectSummariesListAsXMLAsync(Ticket, NumberOfProjects, SortOrder, ProjectStatusCode, null);
        }
        
        /// <remarks/>
        public void GetProjectSummariesListAsXMLAsync(string Ticket, int NumberOfProjects, SortOrder SortOrder, ProjectStatusCode ProjectStatusCode, object userState) {
            if ((this.GetProjectSummariesListAsXMLOperationCompleted == null)) {
                this.GetProjectSummariesListAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectSummariesListAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetProjectSummariesListAsXML", new object[] {
                        Ticket,
                        NumberOfProjects,
                        SortOrder,
                        ProjectStatusCode}, this.GetProjectSummariesListAsXMLOperationCompleted, userState);
        }
        
        private void OnGetProjectSummariesListAsXMLOperationCompleted(object arg) {
            if ((this.GetProjectSummariesListAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectSummariesListAsXMLCompleted(this, new GetProjectSummariesListAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/About", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AboutDetail About() {
            object[] results = this.Invoke("About", new object[0]);
            return ((AboutDetail)(results[0]));
        }
        
        /// <remarks/>
        public void AboutAsync() {
            this.AboutAsync(null);
        }
        
        /// <remarks/>
        public void AboutAsync(object userState) {
            if ((this.AboutOperationCompleted == null)) {
                this.AboutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAboutOperationCompleted);
            }
            this.InvokeAsync("About", new object[0], this.AboutOperationCompleted, userState);
        }
        
        private void OnAboutOperationCompleted(object arg) {
            if ((this.AboutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AboutCompleted(this, new AboutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AnalysisCodeGroup {
        
        private AnalysisCode[] analysisCodesField;
        
        private int levelField;
        
        private string nameField;
        
        /// <remarks/>
        public AnalysisCode[] AnalysisCodes {
            get {
                return this.analysisCodesField;
            }
            set {
                this.analysisCodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AnalysisCode {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AboutDetail {
        
        private string nameField;
        
        private string descriptionField;
        
        private string versionField;
        
        private string companyField;
        
        private string writtenByField;
        
        private string contactEmailField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime lastModifiedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string WrittenBy {
            get {
                return this.writtenByField;
            }
            set {
                this.writtenByField = value;
            }
        }
        
        /// <remarks/>
        public string ContactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectSummary {
        
        private string idField;
        
        private string descriptionField;
        
        private ProjectStatusCode projectStatusCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ProjectStatusCode ProjectStatusCode {
            get {
                return this.projectStatusCodeField;
            }
            set {
                this.projectStatusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ProjectStatusCode {
        
        /// <remarks/>
        NotSpecified,
        
        /// <remarks/>
        Draft,
        
        /// <remarks/>
        Quote,
        
        /// <remarks/>
        Forecasted,
        
        /// <remarks/>
        InEvaluation,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Booked,
        
        /// <remarks/>
        InProduction,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        Closed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectSummaryList {
        
        private ProjectSummary[] projectSummariesField;
        
        /// <remarks/>
        public ProjectSummary[] ProjectSummaries {
            get {
                return this.projectSummariesField;
            }
            set {
                this.projectSummariesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileStatus {
        
        private Meta[] metaDataField;
        
        private string fileIDField;
        
        private string filenameField;
        
        private string sourceLanguageIDField;
        
        private string targetLanguageIDField;
        
        private string statusIDField;
        
        private string statusDescriptionField;
        
        /// <remarks/>
        public Meta[] MetaData {
            get {
                return this.metaDataField;
            }
            set {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceLanguageID {
            get {
                return this.sourceLanguageIDField;
            }
            set {
                this.sourceLanguageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TargetLanguageID {
            get {
                return this.targetLanguageIDField;
            }
            set {
                this.targetLanguageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StatusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Meta {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileStatusList {
        
        private FileStatus[] fileStatusesField;
        
        private string projectIDField;
        
        /// <remarks/>
        public FileStatus[] FileStatuses {
            get {
                return this.fileStatusesField;
            }
            set {
                this.fileStatusesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProjectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UOM {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UOMsList {
        
        private UOM[] uOMsField;
        
        private string versionField;
        
        private string typeField;
        
        private string methodField;
        
        /// <remarks/>
        public UOM[] UOMs {
            get {
                return this.uOMsField;
            }
            set {
                this.uOMsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Component {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ComponentsList {
        
        private Component[] componentsField;
        
        private string versionField;
        
        private string typeField;
        
        private string methodField;
        
        /// <remarks/>
        public Component[] Components {
            get {
                return this.componentsField;
            }
            set {
                this.componentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SubTask {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SubTasksList {
        
        private SubTask[] subTasksField;
        
        private string versionField;
        
        private string typeField;
        
        private string methodField;
        
        /// <remarks/>
        public SubTask[] SubTasks {
            get {
                return this.subTasksField;
            }
            set {
                this.subTasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Task {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TasksList {
        
        private Task[] tasksField;
        
        private string versionField;
        
        private string typeField;
        
        private string methodField;
        
        /// <remarks/>
        public Task[] Tasks {
            get {
                return this.tasksField;
            }
            set {
                this.tasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Subject {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SubjectsList {
        
        private Subject[] subjectsField;
        
        private string versionField;
        
        private string typeField;
        
        private string methodField;
        
        /// <remarks/>
        public Subject[] Subjects {
            get {
                return this.subjectsField;
            }
            set {
                this.subjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Language {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LanguageList {
        
        private Language[] languagesField;
        
        private string versionField;
        
        private string typeField;
        
        private string methodField;
        
        /// <remarks/>
        public Language[] Languages {
            get {
                return this.languagesField;
            }
            set {
                this.languagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PMDetail {
        
        private string emailField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectDetail {
        
        private int idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectStatus {
        
        private ProjectDetail projectField;
        
        private ProjectStatusCode projectStatusCodeField;
        
        private System.DateTime dateSubmittedField;
        
        private string submittedByField;
        
        private System.DateTime expectedStartingDateField;
        
        private System.DateTime expectedDeliveryDateField;
        
        private PMDetail projectManagerField;
        
        /// <remarks/>
        public ProjectDetail Project {
            get {
                return this.projectField;
            }
            set {
                this.projectField = value;
            }
        }
        
        /// <remarks/>
        public ProjectStatusCode ProjectStatusCode {
            get {
                return this.projectStatusCodeField;
            }
            set {
                this.projectStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateSubmitted {
            get {
                return this.dateSubmittedField;
            }
            set {
                this.dateSubmittedField = value;
            }
        }
        
        /// <remarks/>
        public string SubmittedBy {
            get {
                return this.submittedByField;
            }
            set {
                this.submittedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpectedStartingDate {
            get {
                return this.expectedStartingDateField;
            }
            set {
                this.expectedStartingDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpectedDeliveryDate {
            get {
                return this.expectedDeliveryDateField;
            }
            set {
                this.expectedDeliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public PMDetail ProjectManager {
            get {
                return this.projectManagerField;
            }
            set {
                this.projectManagerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileInfo {
        
        private string fileIDField;
        
        private string filenameField;
        
        private string sourceLanguageIDField;
        
        private string targetLanguageIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceLanguageID {
            get {
                return this.sourceLanguageIDField;
            }
            set {
                this.sourceLanguageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TargetLanguageID {
            get {
                return this.targetLanguageIDField;
            }
            set {
                this.targetLanguageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileInfoList {
        
        private FileInfo[] fileInfoItemsField;
        
        private string projectIDField;
        
        /// <remarks/>
        public FileInfo[] FileInfoItems {
            get {
                return this.fileInfoItemsField;
            }
            set {
                this.fileInfoItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProjectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class projectdetailLine {
        
        private string descriptionField;
        
        private IDValueItem taskField;
        
        private IDValueItem subtaskField;
        
        private IDValueItem sourceLanguageField;
        
        private IDValueItem targetLanguageField;
        
        private IDValueItem componentField;
        
        private IDValueItem subjectMatterField;
        
        private double rateField;
        
        private IDValueItem uOMField;
        
        private double volumeField;
        
        private double subtotalField;
        
        private IDValueItem[] quantitySplitField;
        
        private string idField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Task {
            get {
                return this.taskField;
            }
            set {
                this.taskField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Subtask {
            get {
                return this.subtaskField;
            }
            set {
                this.subtaskField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem SourceLanguage {
            get {
                return this.sourceLanguageField;
            }
            set {
                this.sourceLanguageField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem TargetLanguage {
            get {
                return this.targetLanguageField;
            }
            set {
                this.targetLanguageField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Component {
            get {
                return this.componentField;
            }
            set {
                this.componentField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem SubjectMatter {
            get {
                return this.subjectMatterField;
            }
            set {
                this.subjectMatterField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem UOM {
            get {
                return this.uOMField;
            }
            set {
                this.uOMField = value;
            }
        }
        
        /// <remarks/>
        public double Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public double Subtotal {
            get {
                return this.subtotalField;
            }
            set {
                this.subtotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public IDValueItem[] QuantitySplit {
            get {
                return this.quantitySplitField;
            }
            set {
                this.quantitySplitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IDValueItem {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class projectdetailCustomreference {
        
        private string idField;
        
        private string levelField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class projectdetailSalesmanager {
        
        private string fullnameField;
        
        private string emailField;
        
        /// <remarks/>
        public string Fullname {
            get {
                return this.fullnameField;
            }
            set {
                this.fullnameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class projectdetailProjectmanager {
        
        private string fullnameField;
        
        private string emailField;
        
        private string levelField;
        
        /// <remarks/>
        public string Fullname {
            get {
                return this.fullnameField;
            }
            set {
                this.fullnameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class projectdetailProjectowner {
        
        private string firstnameField;
        
        private string surnameField;
        
        private string emailField;
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MetaDataItem {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectDetails {
        
        private string idField;
        
        private string descriptionField;
        
        private IDValueItem currencyField;
        
        private double totalPriceField;
        
        private MetaDataItem[] metaDataField;
        
        private IDValueItem statusField;
        
        private IDValueItem companyField;
        
        private projectdetailProjectowner projectOwnerField;
        
        private IDValueItem centerField;
        
        private System.DateTime dateSubmittedField;
        
        private System.DateTime expectedStartingDateField;
        
        private System.DateTime expectedDeliveryDateField;
        
        private string specialInstructionsField;
        
        private string pOReferenceField;
        
        private projectdetailOrigin originField;
        
        private projectdetailProjectmanager[] projectManagersField;
        
        private projectdetailSalesmanager salesManagerField;
        
        private projectdetailCustomreference[] customReferencesField;
        
        private projectdetailLine[] tasksField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public double TotalPrice {
            get {
                return this.totalPriceField;
            }
            set {
                this.totalPriceField = value;
            }
        }
        
        /// <remarks/>
        public MetaDataItem[] MetaData {
            get {
                return this.metaDataField;
            }
            set {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public projectdetailProjectowner ProjectOwner {
            get {
                return this.projectOwnerField;
            }
            set {
                this.projectOwnerField = value;
            }
        }
        
        /// <remarks/>
        public IDValueItem Center {
            get {
                return this.centerField;
            }
            set {
                this.centerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateSubmitted {
            get {
                return this.dateSubmittedField;
            }
            set {
                this.dateSubmittedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpectedStartingDate {
            get {
                return this.expectedStartingDateField;
            }
            set {
                this.expectedStartingDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpectedDeliveryDate {
            get {
                return this.expectedDeliveryDateField;
            }
            set {
                this.expectedDeliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialInstructions {
            get {
                return this.specialInstructionsField;
            }
            set {
                this.specialInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public string POReference {
            get {
                return this.pOReferenceField;
            }
            set {
                this.pOReferenceField = value;
            }
        }
        
        /// <remarks/>
        public projectdetailOrigin Origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ProjectManager", IsNullable=false)]
        public projectdetailProjectmanager[] ProjectManagers {
            get {
                return this.projectManagersField;
            }
            set {
                this.projectManagersField = value;
            }
        }
        
        /// <remarks/>
        public projectdetailSalesmanager SalesManager {
            get {
                return this.salesManagerField;
            }
            set {
                this.salesManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("CustomReference", IsNullable=false)]
        public projectdetailCustomreference[] CustomReferences {
            get {
                return this.customReferencesField;
            }
            set {
                this.customReferencesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Tasks", IsNullable=false)]
        public projectdetailLine[] Tasks {
            get {
                return this.tasksField;
            }
            set {
                this.tasksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum projectdetailOrigin {
        
        /// <remarks/>
        viaProjectManager,
        
        /// <remarks/>
        viaPortal,
        
        /// <remarks/>
        viaWebServices,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum QuoteAction {
        
        /// <remarks/>
        Reject,
        
        /// <remarks/>
        Accept,
        
        /// <remarks/>
        Rework,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SortOrder {
        
        /// <remarks/>
        MostRecent,
        
        /// <remarks/>
        Oldest,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCustomerAnalysisCodesCompletedEventHandler(object sender, GetCustomerAnalysisCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAnalysisCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAnalysisCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AnalysisCodeGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AnalysisCodeGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AcceptOrRejectQuoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProjectInformationCompletedEventHandler(object sender, GetProjectInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateProjectCompletedEventHandler(object sender, CreateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddTaskToProjectCompletedEventHandler(object sender, AddTaskToProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTaskToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTaskToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddFileToProjectCompletedEventHandler(object sender, AddFileToProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileInfoList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitProjectCompletedEventHandler(object sender, SubmitProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitForQuotationCompletedEventHandler(object sender, SubmitForQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitForQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitForQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AbandonProjectCompletedEventHandler(object sender, AbandonProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AbandonProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AbandonProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProjectStatusCompletedEventHandler(object sender, GetProjectStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProjectStatusAsXMLCompletedEventHandler(object sender, GetProjectStatusAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectStatusAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectStatusAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RetrieveProjectFileByIDCompletedEventHandler(object sender, RetrieveProjectFileByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectFileByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectFileByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RetrieveProjectFileByFilenameCompletedEventHandler(object sender, RetrieveProjectFileByFilenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectFileByFilenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectFileByFilenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSourceLanguagesCompletedEventHandler(object sender, GetSourceLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSourceLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSourceLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LanguageList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LanguageList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSourceLanguagesAsXMLCompletedEventHandler(object sender, GetSourceLanguagesAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSourceLanguagesAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSourceLanguagesAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTargetLanguagesCompletedEventHandler(object sender, GetTargetLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTargetLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTargetLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LanguageList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LanguageList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTargetLanguagesAsXMLCompletedEventHandler(object sender, GetTargetLanguagesAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTargetLanguagesAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTargetLanguagesAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubjectsCompletedEventHandler(object sender, GetSubjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubjectsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubjectsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubjectsAsXMLCompletedEventHandler(object sender, GetSubjectsAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectsAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectsAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTasksCompletedEventHandler(object sender, GetTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TasksList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TasksList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTasksAsXMLCompletedEventHandler(object sender, GetTasksAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTasksAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTasksAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubTasksCompletedEventHandler(object sender, GetSubTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubTasksList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubTasksList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubTasksAsXMLCompletedEventHandler(object sender, GetSubTasksAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubTasksAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubTasksAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetComponentsCompletedEventHandler(object sender, GetComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ComponentsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ComponentsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetComponentsAsXMLCompletedEventHandler(object sender, GetComponentsAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComponentsAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComponentsAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUOMsCompletedEventHandler(object sender, GetUOMsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUOMsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUOMsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UOMsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UOMsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUOMsAsXMLCompletedEventHandler(object sender, GetUOMsAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUOMsAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUOMsAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFileStatusCompletedEventHandler(object sender, GetFileStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileStatusList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileStatusList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFileStatusAsXMLCompletedEventHandler(object sender, GetFileStatusAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStatusAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileStatusAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProjectSummariesListCompletedEventHandler(object sender, GetProjectSummariesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectSummariesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectSummariesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectSummaryList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectSummaryList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProjectSummariesListAsXMLCompletedEventHandler(object sender, GetProjectSummariesListAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectSummariesListAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectSummariesListAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AboutCompletedEventHandler(object sender, AboutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AboutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AboutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AboutDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AboutDetail)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591